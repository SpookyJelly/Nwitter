{"version":3,"sources":["fbInstance.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbservice","firestore","storageService","storage","Profile","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","myNweets","setMyNweets","onSubmit","event","a","preventDefault","updateProfile","getMyNweets","useCallback","collection","where","uid","orderBy","get","nweets","datas","docs","map","doc","data","texts","i","index","text","useEffect","className","type","placeholder","autoFocus","value","onChange","target","style","marginTop","Nweet","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","required","prev","Auth","err","seterr","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","nweetObj","isOwner","editing","setEditing","newNweet","setNewNweet","onDeleteClick","window","confirm","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","alt","faTrash","faPencilAlt","NweetFactory","attachment","setAttachment","nweet","setNweet","fileRef","ref","child","uuidv4","putString","response","getDownloadURL","nweetObject","createdAt","Date","now","creatorId","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","setNweets","onSnapshot","snapshot","nweetArray","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7553fe6e.chunk.js","sourcesContent":["// 가끔 코드들 보면 import * as firebase로 되어있는데, 그건 7버전 이하인 경우에 뜨는거다\r\n// 나는 8버전이라 무관하다\r\n// 이거 run 해보니까 콘솔창에 firebase 싹 다 로드하는 것 보다는 진짜로 사용할 기능만 꺼내와서 사용하라고하네\r\n// ex. /database, /auth 이런 식으로.\r\n// firebase를 init 하려면 firebase/app 을 가져오면 된다\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGEING_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbservice = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService, dbservice } from \"fbInstance\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const [myNweets, setMyNweets] = useState([]);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n    refreshUser();\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  const getMyNweets = useCallback(async () => {\r\n    const nweets = await dbservice\r\n      .collection(\"nweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n\r\n    const datas = nweets.docs.map((doc) => doc.data());\r\n    const texts = datas.map((i, index) => {\r\n      return { text: i.text, index: index };\r\n    });\r\n    setMyNweets(texts);\r\n  }, [userObj.uid]);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  useEffect(() => {\r\n    getMyNweets();\r\n    // Dismount 될 때 다시 myNweets를 비워줌으로서 다시 로드될 때 받아올수 있게 하였다\r\n    return () => {\r\n      setMyNweets([]);\r\n    };\r\n  }, [getMyNweets]);\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          autoFocus\r\n          value={newDisplayName}\r\n          onChange={onChange}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <h3>작성한 트윗들</h3>\r\n      {myNweets ? (\r\n        myNweets.map((Nweet) => {\r\n          return <ol key={Nweet.index}>{Nweet.text}</ol>;\r\n        })\r\n      ) : (\r\n        <p>아직 아무런 트윗도 하지 않았어요</p>\r\n      )}\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbInstance\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // 계정 생성\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        //login\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(\"data\", data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        ></input>\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        ></input>\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Login\"}\r\n        ></input>\r\n      </form>\r\n      {error && <span className=\"authError\">{error}</span>}\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbInstance\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Auth = () => {\r\n  const [err, seterr] = useState(\"\");\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    try {\r\n      await authService.signInWithPopup(provider);\r\n    } catch (err) {\r\n      seterr(err.message);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div>{err}</div>\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React, { useState } from \"react\";\r\nimport { dbservice, storageService } from \"fbInstance\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you fuck'in sure?\");\r\n    if (ok) {\r\n      await dbservice.doc(`nweets/${nweetObj.id}`).delete();\r\n      // 이미지 있는 게시글만 storage 추적 삭제\r\n      if (nweetObj.attachmentUrl !== \"\") {\r\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n      }\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    dbservice.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your Nweet\"\r\n              value={newNweet}\r\n              onChange={onChange}\r\n              required\r\n            ></input>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Update Nweet\"\r\n              className=\"formBtn\"\r\n            ></input>\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} alt=\"attach\" />\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import React, { useState } from \"react\";\r\nimport { storageService, dbservice } from \"fbInstance\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const [nweet, setNweet] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      //ref는 GCS의 오프젝트에 대한 참조를 나타냄. 이걸 이용하면 옵로드 다운로드 삭제 가능\r\n      // 일단 child를 만들어야한다 . path에 들어가는건 이미지의 path\r\n      const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await fileRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObject = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbservice.collection(\"nweets\").add(nweetObject);\r\n    setNweet(\"\"); // 제출하고 초기화\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    // 새로운 Reader 인스턴스 생성\r\n    const reader = new FileReader();\r\n    // 그리고 그걸 읽는다\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearPhoto = () => {\r\n    setAttachment(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n            alt=\"alt\"\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearPhoto}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default NweetFactory;\r\n","import { dbservice } from \"fbInstance\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  //onSnapshot의 첫번째 인자인 snapshot은 매개변수임 옵저버 역할을 한다.\r\n  // 데이터 베이스에서 뭔갈 하면 그걸 알려줌\r\n  //useEffect는 업데이트 될 때마다 매번 실행\r\n  // 공식 문서 왈 : class에 익숙하다면 왜 한번이 아니라 모든 랜더링시 실행되는지 궁금\r\n  // class 컴포에서 Didupdate cycle를 깜박해서 메모리 누수가 많이 일어났기에 hook을 만들 때는 앗사리 하나로 합쳐버렸다\r\n  useEffect(() => {\r\n    dbservice\r\n      .collection(\"nweets\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const nweetArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setNweets(nweetArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          ></Nweet>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\n// 함수 컴포넌트로 Return\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import AppRouter from \"components/Router\";\nimport React, { useEffect, useState } from \"react\";\nimport { authService } from \"fbInstance\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    //onAuthSateChanged : 로그인 상태 바뀌었을 때\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <>\n          <AppRouter\n            refreshUser={refreshUser}\n            isLoggedIn={Boolean(userObj)}\n            userObj={userObj}\n          />\n          <div className=\"ocean\">\n            <div className=\"wave\"></div>\n            <div className=\"wave\"></div>\n          </div>\n        </>\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}